# B2.10 Контейнеры tuple и set

# Множества
# Множества в Python задаются с помощью ключевого слова set и представляют из себя неупорядоченную последовательность
# !!! уникальных !!! элементов. Множества, как и списки, можно изменять в процессе работы с ними:
# добавлять и удалять элементы. Рассмотрим несколько примеров.

set()  # создаем пустое множество
print(set("строка"))  # преобразуем строку во множество
print(set([1, 2, 3, 4, 5]))  # преобразуем список во множество

# Задать множество можно и с помощью фигурных скобок, перечислив элементы через запятую:
s1 = {1, 2, 3, 4, 5}
s2 = {"строковый элемент множества", 42, (1, 2, 3)}
print(s1)
print(s2)

# Для добавления элемента в существующее множество предусмотрен метод add.
print("Метод add")
s = set()  # создаем пустое множество
print(s)
s.add(1)  # добавляем в множество элемент 1
print(s)
s.add("строка")  # добавляем в множество элемент "строка"
print(s)
s.add(1)  # добавляем во множество уже существующий элемент
print(s)

print("----------------")

# Над множествами в Python можно проводить обычные операции: проверять принадлежность элемента,
# вычитать одно множество из другого и т.д. Проверить принадлежность элемента множеству можно с помощью оператора in,
# вычесть множество s2 из множества s1 означает построить множество, состоящее из элементов множества s1 и
# не содержащее элементы множества s2. Выполнить это действие в Python можно с помощью оператора вычитания.

cars_list = set(["BMW", "Mercedes", "Audi", "Honda", "Lada"]) # создаем множество производителей автомобилей
car = "Porsche" # в переменной my_car храним название производителя машины
print(car in cars_list)  # с помощью оператора in проверяем принадлежит ли наша машина списку производителей cars_list

car = "BMW"
print(car in cars_list)

japanese_cars = set(["Honda", "Toyota", "Subaru", "Suzuki"])  # создаем множество японских производителей автомобилей
print(cars_list - japanese_cars) # убираем из исходного списка автомобилей японских производителей