# B2.14 Парсер журналов событий
# Решение от составителей курса

# Домашнее задание в этом модуле предполагает работу с журналами интернет-магазина.
# В предыдущем уроке мы рассмотрели пример текстовых журналов и научились отвечать на элементарные вопросы о системе.
# Теперь нам  предстоит обработать журнал событий: чаще всего это просто текстовый файл,
# в каждую строку которого выгружены события из аналитической системы.

# сообщения в таком журнале уже структурированы — в каждой строке файла записан JSON документ
# Логика обработки журналов:
# - прочитать файл по строкам;
# - десериализовать строку в словарь, используя метод json.loads;
# - провести необходимую фильтрацию событий: проверить, что поле detectedDuplicate равно False, поле detectedCorruption равно False, провести дополнительную фильтрацию, необходимую по каждому из пунктов;
# - провести вычисления;
# - вывести полученные результаты на экран.

# В журнале журнал 2 (data_3000.json) есть события с типом itemFavEvent (поле eventType равно itemFavEvent).
# Они появились после того, как в наш интернет-магазин добавили возможность внести товар в избранное
# (то есть пользователь может товар пометить "звёздочкой" или "лайкнуть").
# Модифицируйте программу для построения следующих метрик по избранным товарам:
# - Популярность нововведения. Посчитайте, сколько товаров было добавлено в избранное.
# - Количество звёздочек для каждого товара. То есть, сколько раз товар был добавлен в избранное для каждого из товаров.
# Для того, чтобы различать товары используйте идентификатор в поле item_id — он уникален для каждого товара.
# По сути, вам надо рассчитать в программе количество звёздочек для каждого такого идентификатора.


# Вопрос 1. Сколькими браузерами пользуются наши клиенты?
# Вопрос 2. Какова общая сумма всех покупок?

# Задания
# B2.14.3 Второй журнал: браузеры
# B2.14.4 Второй журнал: сумма покупок
# B2.14.5 Второй журнал: число избранных
# B2.14.6 Число "лайков" товара
# B2.14.7 Самый популярный товар
# B2.14.8 Самый непопулярный товар

# Импортируем необходимые модули стандартной библиотеки
import sys
import json
import collections

def load_log(path):
    """
    Принимает на вход путь к файлу с журналом, десериализуем его
    и возвращает список отфильтрованных событий
    """
    fp = open(path) # открываем файл журнала на чтение
    events = [] # заводим переменную для списка отфильтрованных событий
    for line in fp: # читаем файл построчно
        event = json.loads(line) # десериализуем JSON документ
        if not event["detectedDuplicate"] and not event["detectedCorruption"]:
            # сохраняем в список events отфильтрованные события
            events.append(event)
    return events # возвращаем полученный список событий

# напишем функцию main, которая даст ответы на поставленные вопросы

def main():

    log_path  = "data/data_3000.json"
#    log_path = sys.argv[1] # получаем путь к файлу журнала
    events = load_log(log_path) # вызываем функцию load_log

    user_agents = set() # в этой переменной будем хранить уникальные значения поля userAgentName
    total_sum = 0 # в этой переменной будем хранить итоговую сумму покупок

    # Создаем счетчик для хранения количества звездочек, для каждого товара
    favorite_items = collections.Counter()

    for event in events: # итерируемся по всем событиям
        user_agents.add(event["userAgentName"]) # добавляем в множество user_agent очередной элемент
        if event["eventType"] == "itemBuyEvent": # проверяем тип события
            total_sum += event["item_price"]  # прибавляем к общей сумме очередной значение цены товара для событий типа itemBuyEvent
        # если событие типа itemFavEvent
        elif event["eventType"] == "itemFavEvent":
            # запоминаем идентификатор товара
            item_id = event["item_id"]
            # увеличиваем счетчик для данного идентификатора товара
            favorite_items[item_id] += 1

    # Выводим результаты на консоль
    print("Количество браузеров: ", len(user_agents))
    print("Общая сумма покупок: ", total_sum)

    # Выводим количество различных товаров, добавленных в избранное
    print("Количество различных товаров, добавленных в избранное: ", len(favorite_items))

    # Для каждого идентификатора товара выводим количество звездочек
    for item_id, cnt in favorite_items.items():
        print("{} - {}".format(item_id, cnt))

if __name__ == "__main__":
    main()

